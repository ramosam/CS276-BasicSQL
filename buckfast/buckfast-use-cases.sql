-- BUCKFAST USE CASES --

-- 1


-- 2
-- TOTAL NUMBER OF SALES FOR A SINGLE STORE FOR THE MONTH OF JUNE 2019

SELECT TO_CHAR(SUM(TLI.QUANTITY * P.PRODUCT_PRICE), 'FML99G999D00','NLS_NUMERIC_CHARACTERS = ''.,'' NLS_CURRENCY=€') AS TOTAL_SALES  
FROM BASALE_TRANSACTION T
JOIN BATRANSACTION_LINE_ITEM TLI ON T.SALE_TRANSACTION_ID = TLI.FK_SALE_TRANSACTION_ID
JOIN BAPRODUCT P ON P.PRODUCT_ID = TLI.FK_PRODUCT_ID
JOIN BASTORE_INVENTORY_LINEITEM SILI ON P.PRODUCT_ID = SILI.FK_PRODUCT_ID
JOIN BASHIPMENT SHIP ON SILI.FK_SHIPMENT_ID = SHIP.SHIPMENT_ID
JOIN BASTORE_INVENTORY SI ON SHIP.FK_STORE_INVENTORY_ID = SI.STORE_INVENTORY_ID
JOIN BASTORE_ENTITY SE ON SI.FK_BUSINESS_ID = SE.BUSINESS_ID
JOIN BABUSINESS ON SE.BUSINESS_ID = BABUSINESS.BUSINESS_ID
WHERE T.TRANSACTION_DATE BETWEEN TO_DATE('6-1-19', 'MM-DD-YY') AND TO_DATE('6-30-19', 'MM-DD-YY')
AND BUSINESS_NAME = 'GIFT SHOP';


-- 3
-- A new employee is hired for the Grange Restaurant.  You will need to track
-- their hours and their pay rate per hour.  Calculate their salary for the 
-- week of June 1 through June 8.
-- NEWEST EMPLOYEE AT THE GRANGE

SELECT SHI.START_DATE_TIME, SHI.END_DATE_TIME
FROM BAASSIGNED_SCHEDULE ASSI
JOIN BASHIFT SHI ON SHI.FK_ASSIGNED_SCHEDULE_ID = ASSI.ASSIGNED_SCHEDULE_ID
JOIN BAEMPLOYEE E ON E.EMPLOYEE_ID = SHI.FK_EMPLOYEE_ID
WHERE ASSI.FK_BUSINESS_ID = 'R1'
AND SHI.FK_EMPLOYEE_ID = (SELECT BAEMPLOYEE.EMPLOYEE_ID FROM BAEMPLOYEE 
  WHERE BAEMPLOYEE.HIRE_DATE = (SELECT MAX(HIRE_DATE) FROM BAEMPLOYEE));
  
-- HOURS WORKED BETWEEN JUNE 1 AND JUNE 8
(SELECT SHI.END_DATE_TIME - SHI.START_DATE_TIME
FROM BAASSIGNED_SCHEDULE ASSI
JOIN BASHIFT SHI ON SHI.FK_ASSIGNED_SCHEDULE_ID = ASSI.ASSIGNED_SCHEDULE_ID
JOIN BAEMPLOYEE E ON E.EMPLOYEE_ID = SHI.FK_EMPLOYEE_ID
WHERE ASSI.FK_BUSINESS_ID = 'R1'
AND SHI.FK_EMPLOYEE_ID = (SELECT BAEMPLOYEE.EMPLOYEE_ID FROM BAEMPLOYEE 
  WHERE BAEMPLOYEE.HIRE_DATE = (SELECT MAX(HIRE_DATE) FROM BAEMPLOYEE))
AND ASSI.START_DATE >= TO_DATE('6-1-19', 'MM-DD-YY')
AND ASSI.END_DATE <= TO_DATE('6-8-19', 'MM-DD-YY')) 
;

SELECT 
  SUM( (END_DATE_TIME - START_DATE_TIME))
    FROM BAASSIGNED_SCHEDULE ASSI
    JOIN BASHIFT SHI ON SHI.FK_ASSIGNED_SCHEDULE_ID = ASSI.ASSIGNED_SCHEDULE_ID
    JOIN BAEMPLOYEE E ON E.EMPLOYEE_ID = SHI.FK_EMPLOYEE_ID
    WHERE ASSI.FK_BUSINESS_ID = 'R1'
    AND ASSI.START_DATE >= TO_DATE('6-1-19', 'MM-DD-YY')
    AND ASSI.END_DATE   <= TO_DATE('6-8-19', 'MM-DD-YY')
    AND SHI.FK_EMPLOYEE_ID    =
      (SELECT BAEMPLOYEE.EMPLOYEE_ID
        FROM BAEMPLOYEE
        WHERE BAEMPLOYEE.HIRE_DATE =
          (SELECT MAX(HIRE_DATE) FROM BAEMPLOYEE)
      )
, 

  (SELECT PAY_RATE
    FROM BAPAYCHECK
    WHERE FK_EMPLOYEE_ID =
      (SELECT BAEMPLOYEE.EMPLOYEE_ID
      FROM BAEMPLOYEE
      WHERE BAEMPLOYEE.HIRE_DATE =
        (SELECT MAX(HIRE_DATE) FROM BAEMPLOYEE)
      )
  ) AS PAYRATE
  FROM BASHIFT;
  

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
--




-- 4
SELECT C.FIRST_NAME AS CUSTOMER_FIRST, C.LAST_NAME AS CUSTOMER_LAST, 
  BUSINESS_NAME, E.FIRST_NAME AS EMP_FIRST, E.LAST_NAME AS EMP_LAST, 
  ASSI.START_DATE AS SCHEDULE_START
FROM BARESERVATION R
JOIN BAGUESTHOUSE_RESERVATION GHR ON R.RESERVATION_ID = GHR.FK_RESERVATION_ID
JOIN BAGUESTHOUSE_ROOM ROOM ON ROOM.GUESTHOUSE_ROOM_ID = GHR.FK_GUESTHOUSE_ROOM_ID
JOIN BAGUESTHOUSE GH  ON GH.BUSINESS_ID = ROOM.FK_BUSINESS_ID
JOIN BABUSINESS ON BABUSINESS.BUSINESS_ID = GH.BUSINESS_ID
JOIN BAASSIGNED_SCHEDULE ASSI ON ASSI.FK_BUSINESS_ID = GH.BUSINESS_ID
JOIN BASHIFT ON ASSI.ASSIGNED_SCHEDULE_ID = BASHIFT.FK_ASSIGNED_SCHEDULE_ID
JOIN BAEMPLOYEE E ON BASHIFT.FK_EMPLOYEE_ID = E.EMPLOYEE_ID
JOIN BACUSTOMER C ON C.CUSTOMER_ID = R.FK_CUSTOMER_ID
WHERE R.DATE_START = TO_DATE('6-1-19', 'MM-DD-YY') 
  AND R.DATE_END = TO_DATE('6-14-19','MM-DD-YY');


-- 5 -- WHAT COLUMNS NEED TO BE INCLUDED
-- The Abbot wants to know how many distinct guests have reservations at the 
-- abbey from June 1 to August 31 in 2019.  Even if I have stayed at the abbey
-- twice, I should only be counted once.
SELECT DISTINCT C.CUSTOMER_ID, C.FIRST_NAME, C.LAST_NAME
FROM BACUSTOMER C 
JOIN BARESERVATION R ON R.FK_CUSTOMER_ID = C.CUSTOMER_ID
JOIN BAGUESTHOUSE_RESERVATION GHR ON GHR.FK_RESERVATION_ID = R.RESERVATION_ID
WHERE R.DATE_START >= TO_DATE('6-1-19', 'MM-DD-YY')
  AND R.DATE_END <= TO_DATE('8-31-19', 'MM-DD-YY');


-- 6


-- 7


-- 8


-- 9


-- 10


